{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "DndPlayerSource": {
      "type": "string",
      "enum": [
        "dnd_beyond",
        "roll20",
        "pdf_character_sheet",
        "arcana_pixel"
      ],
      "description": "Definition of available character sources"
    },
    "Class": {
      "type": "object",
      "properties": {
        "class": {
          "type": "string",
          "description": "Class name"
        },
        "level": {
          "type": "number",
          "description": "Class level",
          "default": 1
        },
        "subclass": {
          "type": "string",
          "description": "Subclass name (e.g., \"School of Evocation\" for Wizard)"
        },
        "hitDice": {
          "anyOf": [
            {
              "$ref": "#/definitions/HitDice"
            },
            {
              "type": "string"
            }
          ],
          "description": "Hit dice used for healing"
        },
        "hitDiceUsed": {
          "type": "number",
          "description": "Amount of hit dice already used Max amount is the class level",
          "default": 0
        }
      },
      "required": [
        "class",
        "level",
        "hitDice",
        "hitDiceUsed"
      ],
      "additionalProperties": false,
      "description": "Schema definition for a single character class"
    },
    "HitDice": {
      "type": "string",
      "enum": [
        "d6",
        "d8",
        "d10",
        "d12"
      ]
    },
    "ProgressionBar": {
      "type": "object",
      "properties": {
        "current": {
          "type": "number",
          "description": "Current value"
        },
        "max": {
          "type": "number",
          "description": "Max value"
        }
      },
      "required": [
        "current",
        "max"
      ],
      "additionalProperties": false,
      "description": "Schema definition for a simple progression bar, with current and max values"
    },
    "Stats": {
      "type": "object",
      "properties": {
        "str": {
          "$ref": "#/definitions/Stat",
          "description": "Strength"
        },
        "dex": {
          "$ref": "#/definitions/Stat",
          "description": "Dexterity"
        },
        "con": {
          "$ref": "#/definitions/Stat",
          "description": "Constitution"
        },
        "int": {
          "$ref": "#/definitions/Stat",
          "description": "Intelligence"
        },
        "wis": {
          "$ref": "#/definitions/Stat",
          "description": "Wisdom"
        },
        "cha": {
          "$ref": "#/definitions/Stat",
          "description": "Charisma"
        }
      },
      "required": [
        "str",
        "dex",
        "con",
        "int",
        "wis",
        "cha"
      ],
      "additionalProperties": false,
      "description": "Schema definition for all character stats"
    },
    "Stat": {
      "type": "object",
      "properties": {
        "stat": {
          "$ref": "#/definitions/StatsType",
          "description": "Stat identifier"
        },
        "value": {
          "type": "number",
          "description": "Stat value"
        },
        "bonus": {
          "type": "number",
          "description": "Any bonuses to the stat"
        },
        "isProficient": {
          "type": "boolean",
          "description": "Indicates if the character is proficient in the stat. Used for saving throws."
        }
      },
      "required": [
        "stat",
        "value"
      ],
      "additionalProperties": false,
      "description": "Schema definition for a single character stat"
    },
    "StatsType": {
      "type": "string",
      "enum": [
        "str",
        "dex",
        "con",
        "int",
        "wis",
        "cha"
      ],
      "description": "Definition of available Stats identifiers"
    },
    "Skill": {
      "type": "object",
      "properties": {
        "skill": {
          "$ref": "#/definitions/SkillsType",
          "description": "Skill identifier"
        },
        "stat": {
          "$ref": "#/definitions/Stat",
          "description": "Skill stat used"
        },
        "isProficient": {
          "type": "boolean",
          "description": "Indicates if the character is proficient in the skill"
        }
      },
      "required": [
        "skill",
        "stat"
      ],
      "additionalProperties": false,
      "description": "Schema definition for a single skill"
    },
    "SkillsType": {
      "type": "string",
      "enum": [
        "acrobatics",
        "animal_handling",
        "arcana",
        "athletics",
        "deception",
        "history",
        "insight",
        "intimidation",
        "investigation",
        "medicine",
        "nature",
        "perception",
        "performance",
        "persuasion",
        "religion",
        "sleight_of_hand",
        "stealth",
        "survival"
      ],
      "description": "Definition of available Skills identifiers"
    },
    "Currencies": {
      "type": "object",
      "properties": {
        "cp": {
          "type": "number",
          "description": "Copper Pieces"
        },
        "sp": {
          "type": "number",
          "description": "Silver Pieces"
        },
        "gp": {
          "type": "number",
          "description": "Gold Pieces"
        },
        "ep": {
          "type": "number",
          "description": "Electrum Pieces"
        },
        "pp": {
          "type": "number",
          "description": "Platinum Pieces"
        }
      },
      "required": [
        "cp",
        "sp",
        "gp",
        "ep",
        "pp"
      ],
      "additionalProperties": false,
      "description": "Current character's money divided into game's currencies"
    },
    "SpellCastingAbility": {
      "type": "object",
      "properties": {
        "stat": {
          "$ref": "#/definitions/StatsType",
          "description": "Spellcasting ability (null when not a spellcaster)"
        },
        "class": {
          "type": "string",
          "description": "Class that can cast spells using this stat"
        }
      },
      "required": [
        "class"
      ],
      "additionalProperties": false,
      "description": "Schema definition for a single spellcasting ability"
    },
    "Spell": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "Unique identifier for the spell"
        },
        "isPrepared": {
          "type": "boolean",
          "description": "Indicates if the spell is prepared or not"
        },
        "isCantrip": {
          "type": "boolean",
          "description": "Indicates if the spell is a cantrip"
        },
        "range": {
          "$ref": "#/definitions/Range",
          "description": "Range of the spell"
        },
        "level": {
          "type": "number",
          "description": "Level of the spell"
        },
        "atHigherLevels": {
          "$ref": "#/definitions/SpellAtHigherLevels",
          "description": "Bonus to the spell when cast at higher levels"
        },
        "component": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpellComponent"
          },
          "description": "Components required to cast the spell"
        },
        "name": {
          "type": "string",
          "description": "Name of the spell"
        },
        "description": {
          "type": "string",
          "description": "Description of the spell"
        },
        "duration": {
          "$ref": "#/definitions/SpellDuration",
          "description": "Duration of the spell"
        },
        "needConcentration": {
          "type": "boolean",
          "description": "Indicates if the spell needs concentration"
        },
        "castAs": {
          "type": "string",
          "enum": [
            "action",
            "bonus_action",
            "reaction",
            "ritual"
          ],
          "description": "Type of the spell"
        },
        "damageType": {
          "$ref": "#/definitions/DamageType",
          "description": "Damage type of the spell Nullable when the spell doesn't deal damage"
        },
        "save": {
          "$ref": "#/definitions/Stat",
          "description": "Save DC (Difficulty Class) of the spell Nullable when the spell isn't cast against a creature/character"
        },
        "heals": {
          "$ref": "#/definitions/Dice",
          "description": "Amount of healing the spell deals Nullable when the spell doesn't deal healing"
        },
        "damage": {
          "$ref": "#/definitions/Dice",
          "description": "Amount of damage the spell deals Nullable when the spell doesn't deal damage"
        }
      },
      "required": [
        "id",
        "isPrepared",
        "isCantrip",
        "range",
        "level",
        "component",
        "name",
        "description",
        "duration",
        "needConcentration",
        "castAs"
      ],
      "additionalProperties": false,
      "description": "Schema definition for a single spell"
    },
    "Range": {
      "type": "object",
      "properties": {
        "distance": {
          "type": "number",
          "description": "Distance of the range Is zero for touch and self"
        },
        "type": {
          "type": "string",
          "enum": [
            "touch",
            "self",
            "cone",
            "sphere",
            "line",
            "cube",
            "cylinder"
          ],
          "description": "Type of the range"
        }
      },
      "required": [
        "distance",
        "type"
      ],
      "additionalProperties": false,
      "description": "Schema definition for a spell range"
    },
    "SpellAtHigherLevels": {
      "type": "object",
      "properties": {
        "level": {
          "type": "number",
          "description": "Level of the spell"
        },
        "bonus": {
          "$ref": "#/definitions/Dice",
          "description": "Bonus to the spell"
        }
      },
      "required": [
        "level",
        "bonus"
      ],
      "additionalProperties": false,
      "description": "Schema definition for casting a spell at higher levels"
    },
    "Dice": {
      "type": "object",
      "properties": {
        "d4": {
          "type": "number",
          "description": "Number of d4s"
        },
        "d6": {
          "type": "number",
          "description": "Number of d6s"
        },
        "d8": {
          "type": "number",
          "description": "Number of d8s"
        },
        "d10": {
          "type": "number",
          "description": "Number of d10s"
        },
        "d12": {
          "type": "number",
          "description": "Number of d12s"
        },
        "d20": {
          "type": "number",
          "description": "Number of d20s"
        },
        "d100": {
          "type": "number",
          "description": "Number of d100s"
        },
        "hasAdvantage": {
          "type": "boolean",
          "description": "Indicates if the dice roll has advantage"
        },
        "hasDisadvantage": {
          "type": "boolean",
          "description": "Indicates if the dice roll has disadvantage"
        },
        "isSum": {
          "type": "boolean",
          "description": "Indicates if the dice roll is summed Skill checks get the higher value, so it's set to false; Damage rolls, Healing, etc get the sum of all dice, so it's set to true;",
          "default": false
        }
      },
      "additionalProperties": false,
      "description": "Schema definition for a dice roll Can be used for damage, healing, bonuses, etc."
    },
    "SpellComponent": {
      "type": "string",
      "enum": [
        "verbal",
        "somatic",
        "material",
        "focus"
      ],
      "description": "Types of components required to cast a spell"
    },
    "SpellDuration": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "number",
          "description": "Duration time, specified by the unit"
        },
        "unit": {
          "type": "string",
          "enum": [
            "instantaneous",
            "round",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "permanent",
            "until_dispelled"
          ],
          "description": "Unit of the duration"
        }
      },
      "required": [
        "duration",
        "unit"
      ],
      "additionalProperties": false,
      "description": "Schema definition for a spell duration"
    },
    "DamageType": {
      "type": "string",
      "enum": [
        "acid",
        "bludgeoning",
        "cold",
        "fire",
        "force",
        "lightning",
        "necrotic",
        "piercing",
        "poison",
        "psychic",
        "radiant",
        "slashing",
        "thunder"
      ],
      "description": "Definition of available damage types"
    },
    "InventoryItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "Unique identifier for the item"
        },
        "name": {
          "type": "string",
          "description": "Name of the item"
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the item"
        },
        "isEquiped": {
          "type": "boolean",
          "description": "Whether the item is currently equipped by the character"
        },
        "isMagic": {
          "type": "boolean",
          "description": "Whether the item is magical in nature"
        },
        "isContainer": {
          "type": "boolean",
          "description": "Whether the item can contain other items"
        },
        "isConsumable": {
          "type": "boolean",
          "description": "Whether the item is consumed on use"
        },
        "isAttuned": {
          "type": "boolean",
          "description": "Whether the item is currently attuned to the character"
        },
        "canAttune": {
          "type": "boolean",
          "description": "Whether the item can be attuned to"
        },
        "weight": {
          "type": "number",
          "description": "Weight of the item in kilograms"
        },
        "rarity": {
          "type": "string",
          "description": "Rarity level of the item (common, uncommon, rare, etc)"
        },
        "type": {
          "anyOf": [
            {
              "$ref": "#/definitions/InventoryItemType"
            },
            {
              "type": "string"
            }
          ],
          "description": "Type of item (weapon, armor, potion, etc)"
        },
        "damage": {
          "type": "number",
          "description": "Base damage number for weapons"
        },
        "damageType": {
          "$ref": "#/definitions/DamageType",
          "description": "Type of damage dealt by the item"
        },
        "range": {
          "type": "number",
          "description": "Range in meters for ranged weapons"
        },
        "longRange": {
          "type": "number",
          "description": "Long range in meters for ranged weapons"
        },
        "armorClassBonus": {
          "type": "number",
          "description": "Bonus to armor class provided by armor or shields"
        },
        "capacity": {
          "type": "number",
          "description": "Capacity of the item"
        },
        "quantity": {
          "type": "number",
          "description": "Quantity of the item"
        },
        "price": {
          "$ref": "#/definitions/Currencies",
          "description": "Price of the item"
        },
        "penalty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Penalty"
          },
          "description": "Penalties to the character's stats (ex. heavy armor, etc)"
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "isEquiped",
        "isMagic",
        "isContainer",
        "isConsumable",
        "isAttuned",
        "canAttune",
        "weight",
        "rarity",
        "type",
        "quantity",
        "penalty"
      ],
      "additionalProperties": false,
      "description": "Schema definition for a single inventory item"
    },
    "InventoryItemType": {
      "type": "string",
      "enum": [
        "weapon",
        "armor",
        "potion",
        "tool"
      ],
      "description": "Definition of available inventory item types"
    },
    "Penalty": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/PenaltyType",
          "description": "Type of penalty"
        },
        "penalty": {
          "type": "number",
          "description": "Penalty value"
        },
        "stat": {
          "$ref": "#/definitions/StatsType",
          "description": "Stat affected by the penalty"
        },
        "skill": {
          "$ref": "#/definitions/SkillsType",
          "description": "Skill affected by the penalty"
        }
      },
      "required": [
        "type",
        "penalty"
      ],
      "additionalProperties": false
    },
    "PenaltyType": {
      "type": "string",
      "enum": [
        "skill",
        "savingThrow",
        "speed",
        "armorClass",
        "attackRoll",
        "damageRoll",
        "hp"
      ],
      "description": "Definition of available penalty types"
    },
    "Profile": {
      "type": "object",
      "properties": {
        "age": {
          "type": "number",
          "description": "Character's age"
        },
        "gender": {
          "type": "string",
          "description": "Character's gender"
        },
        "height": {
          "type": "number",
          "description": "Character's height"
        },
        "weight": {
          "type": "number",
          "description": "Character's weight"
        },
        "eyes": {
          "type": "string",
          "description": "Character's eyes color"
        },
        "faith": {
          "type": "string",
          "description": "Character's faith"
        },
        "hair": {
          "type": "string",
          "description": "Character's hair color"
        },
        "skin": {
          "type": "string",
          "description": "Character's skin color"
        },
        "lifestyle": {
          "$ref": "#/definitions/Lifestyle",
          "description": "Character's lifestyle"
        },
        "alignment": {
          "$ref": "#/definitions/Alignment",
          "description": "Character's alignment"
        },
        "languages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Languages known by the character"
        }
      },
      "additionalProperties": false,
      "description": "Schema definition for a character profile"
    },
    "Lifestyle": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "wretched",
            "squalid",
            "poor",
            "modest",
            "comfortable",
            "wealthy",
            "aristocratic"
          ],
          "description": "Name of the lifestyle"
        },
        "cost": {
          "$ref": "#/definitions/Currencies",
          "description": "Cost of the lifestyle"
        }
      },
      "required": [
        "name",
        "cost"
      ],
      "additionalProperties": false,
      "description": "Schema definition for a character lifestyle"
    },
    "Alignment": {
      "type": "string",
      "enum": [
        "lawful_good",
        "neutral_good",
        "chaotic_good",
        "lawful_neutral",
        "neutral",
        "chaotic_neutral",
        "lawful_evil",
        "neutral_evil",
        "chaotic_evil"
      ]
    },
    "Condition": {
      "type": "string",
      "enum": [
        "blinded",
        "charmed",
        "deafened",
        "exhausted",
        "frightened",
        "grappled",
        "incapacitated",
        "invisible",
        "paralyzed",
        "petrified",
        "poisoned",
        "prone",
        "restrained",
        "stunned",
        "unconscious"
      ]
    },
    "Proficiency": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "armor",
            "weapon",
            "tool"
          ],
          "description": "Type of proficiency Note: Saving throws and skills are not included in this list, both are handled separately"
        },
        "proficiency": {
          "anyOf": [
            {
              "$ref": "#/definitions/ArmorType"
            },
            {
              "$ref": "#/definitions/WeaponType"
            },
            {
              "$ref": "#/definitions/ToolType"
            }
          ],
          "description": "Proficiency value"
        }
      },
      "required": [
        "type",
        "proficiency"
      ],
      "additionalProperties": false
    },
    "ArmorType": {
      "type": "string",
      "enum": [
        "light",
        "medium",
        "heavy",
        "shield"
      ]
    },
    "WeaponType": {
      "type": "string",
      "enum": [
        "simple",
        "martial"
      ]
    },
    "ToolType": {
      "anyOf": [
        {
          "$ref": "#/definitions/ArtisanTool"
        },
        {
          "$ref": "#/definitions/GamingSet"
        },
        {
          "$ref": "#/definitions/MusicalInstrument"
        },
        {
          "$ref": "#/definitions/Kit"
        },
        {
          "$ref": "#/definitions/Vehicle"
        }
      ]
    },
    "ArtisanTool": {
      "type": "string",
      "enum": [
        "alchemist_supplies",
        "brewer_supplies",
        "calligrapher_supplies",
        "carpenter_tools",
        "cartographer_tools",
        "cobbler_tools",
        "cook_utensils",
        "glassblower_tools",
        "jeweler_tools",
        "leatherworker_tools",
        "mason_tools",
        "painter_supplies",
        "potter_tools",
        "smith_tools",
        "tinker_tools",
        "weaver_tools",
        "woodcarver_tools"
      ]
    },
    "GamingSet": {
      "type": "string",
      "enum": [
        "dice_set",
        "dragonchess_set",
        "playing_card_set",
        "three_dragon_ante_set"
      ]
    },
    "MusicalInstrument": {
      "type": "string",
      "enum": [
        "bagpipes",
        "drum",
        "dulcimer",
        "flute",
        "lute",
        "lyre",
        "horn",
        "pan_flute",
        "shawm",
        "viol"
      ]
    },
    "Kit": {
      "type": "string",
      "enum": [
        "disguise_kit",
        "forgery_kit",
        "herbalism_kit",
        "poisoners_kit",
        "thieves_tools",
        "navigator_tools",
        "healer_kit"
      ]
    },
    "Vehicle": {
      "type": "string",
      "enum": [
        "land_vehicles",
        "water_vehicles"
      ]
    },
    "Background": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the background"
        },
        "description": {
          "type": "string",
          "description": "Description of the background"
        },
        "features": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Special features provided by the background"
        },
        "traits": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Character personality traits from background"
        },
        "ideals": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Character ideals from background"
        },
        "bonds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Character bonds from background"
        },
        "flaws": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Character flaws from background"
        }
      },
      "required": [
        "name"
      ],
      "additionalProperties": false,
      "description": "Schema definition for a character background"
    }
  }
}